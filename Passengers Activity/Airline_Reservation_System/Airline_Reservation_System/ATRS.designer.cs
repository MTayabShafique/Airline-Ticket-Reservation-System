#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Airline_Reservation_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Airline_Reservation_System")]
	public partial class ATRSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAircraft(Aircraft instance);
    partial void UpdateAircraft(Aircraft instance);
    partial void DeleteAircraft(Aircraft instance);
    partial void InsertFlight_Detail(Flight_Detail instance);
    partial void UpdateFlight_Detail(Flight_Detail instance);
    partial void DeleteFlight_Detail(Flight_Detail instance);
    partial void InsertPassenger(Passenger instance);
    partial void UpdatePassenger(Passenger instance);
    partial void DeletePassenger(Passenger instance);
    partial void InsertReserve_Ticket(Reserve_Ticket instance);
    partial void UpdateReserve_Ticket(Reserve_Ticket instance);
    partial void DeleteReserve_Ticket(Reserve_Ticket instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    #endregion
		
		public ATRSDataContext() : 
				base(global::Airline_Reservation_System.Properties.Settings.Default.Airline_Reservation_SystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ATRSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATRSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATRSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ATRSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aircraft> Aircrafts
		{
			get
			{
				return this.GetTable<Aircraft>();
			}
		}
		
		public System.Data.Linq.Table<Flight_Detail> Flight_Details
		{
			get
			{
				return this.GetTable<Flight_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Passenger> Passengers
		{
			get
			{
				return this.GetTable<Passenger>();
			}
		}
		
		public System.Data.Linq.Table<Reserve_Ticket> Reserve_Tickets
		{
			get
			{
				return this.GetTable<Reserve_Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Route> Routes
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aircraft")]
	public partial class Aircraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _aircraft_id;
		
		private string _aircraft_no;
		
		private int _economy_capacity;
		
		private int _first_class_capacity;
		
		private EntitySet<Flight_Detail> _Flight_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaircraft_idChanging(int value);
    partial void Onaircraft_idChanged();
    partial void Onaircraft_noChanging(string value);
    partial void Onaircraft_noChanged();
    partial void Oneconomy_capacityChanging(int value);
    partial void Oneconomy_capacityChanged();
    partial void Onfirst_class_capacityChanging(int value);
    partial void Onfirst_class_capacityChanged();
    #endregion
		
		public Aircraft()
		{
			this._Flight_Details = new EntitySet<Flight_Detail>(new Action<Flight_Detail>(this.attach_Flight_Details), new Action<Flight_Detail>(this.detach_Flight_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aircraft_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int aircraft_id
		{
			get
			{
				return this._aircraft_id;
			}
			set
			{
				if ((this._aircraft_id != value))
				{
					this.Onaircraft_idChanging(value);
					this.SendPropertyChanging();
					this._aircraft_id = value;
					this.SendPropertyChanged("aircraft_id");
					this.Onaircraft_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aircraft_no", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string aircraft_no
		{
			get
			{
				return this._aircraft_no;
			}
			set
			{
				if ((this._aircraft_no != value))
				{
					this.Onaircraft_noChanging(value);
					this.SendPropertyChanging();
					this._aircraft_no = value;
					this.SendPropertyChanged("aircraft_no");
					this.Onaircraft_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_economy_capacity", DbType="Int NOT NULL")]
		public int economy_capacity
		{
			get
			{
				return this._economy_capacity;
			}
			set
			{
				if ((this._economy_capacity != value))
				{
					this.Oneconomy_capacityChanging(value);
					this.SendPropertyChanging();
					this._economy_capacity = value;
					this.SendPropertyChanged("economy_capacity");
					this.Oneconomy_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_class_capacity", DbType="Int NOT NULL")]
		public int first_class_capacity
		{
			get
			{
				return this._first_class_capacity;
			}
			set
			{
				if ((this._first_class_capacity != value))
				{
					this.Onfirst_class_capacityChanging(value);
					this.SendPropertyChanging();
					this._first_class_capacity = value;
					this.SendPropertyChanged("first_class_capacity");
					this.Onfirst_class_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aircraft_Flight_Detail", Storage="_Flight_Details", ThisKey="aircraft_id", OtherKey="aircraft_id")]
		public EntitySet<Flight_Detail> Flight_Details
		{
			get
			{
				return this._Flight_Details;
			}
			set
			{
				this._Flight_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Aircraft = this;
		}
		
		private void detach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Aircraft = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight_Detail")]
	public partial class Flight_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _flight_id;
		
		private string _to_airport;
		
		private string _from_airport;
		
		private System.TimeSpan _departure_time;
		
		private System.DateTime _departure_date;
		
		private System.TimeSpan _arrival_time;
		
		private System.DateTime _arrival_date;
		
		private int _aircraft_id;
		
		private int _economy_fare;
		
		private int _first_class_fare;
		
		private int _route_id;
		
		private EntitySet<Reserve_Ticket> _Reserve_Tickets;
		
		private EntityRef<Aircraft> _Aircraft;
		
		private EntityRef<Route> _Route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onflight_idChanging(int value);
    partial void Onflight_idChanged();
    partial void Onto_airportChanging(string value);
    partial void Onto_airportChanged();
    partial void Onfrom_airportChanging(string value);
    partial void Onfrom_airportChanged();
    partial void Ondeparture_timeChanging(System.TimeSpan value);
    partial void Ondeparture_timeChanged();
    partial void Ondeparture_dateChanging(System.DateTime value);
    partial void Ondeparture_dateChanged();
    partial void Onarrival_timeChanging(System.TimeSpan value);
    partial void Onarrival_timeChanged();
    partial void Onarrival_dateChanging(System.DateTime value);
    partial void Onarrival_dateChanged();
    partial void Onaircraft_idChanging(int value);
    partial void Onaircraft_idChanged();
    partial void Oneconomy_fareChanging(int value);
    partial void Oneconomy_fareChanged();
    partial void Onfirst_class_fareChanging(int value);
    partial void Onfirst_class_fareChanged();
    partial void Onroute_idChanging(int value);
    partial void Onroute_idChanged();
    #endregion
		
		public Flight_Detail()
		{
			this._Reserve_Tickets = new EntitySet<Reserve_Ticket>(new Action<Reserve_Ticket>(this.attach_Reserve_Tickets), new Action<Reserve_Ticket>(this.detach_Reserve_Tickets));
			this._Aircraft = default(EntityRef<Aircraft>);
			this._Route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flight_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int flight_id
		{
			get
			{
				return this._flight_id;
			}
			set
			{
				if ((this._flight_id != value))
				{
					this.Onflight_idChanging(value);
					this.SendPropertyChanging();
					this._flight_id = value;
					this.SendPropertyChanged("flight_id");
					this.Onflight_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_airport", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string to_airport
		{
			get
			{
				return this._to_airport;
			}
			set
			{
				if ((this._to_airport != value))
				{
					this.Onto_airportChanging(value);
					this.SendPropertyChanging();
					this._to_airport = value;
					this.SendPropertyChanged("to_airport");
					this.Onto_airportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_airport", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string from_airport
		{
			get
			{
				return this._from_airport;
			}
			set
			{
				if ((this._from_airport != value))
				{
					this.Onfrom_airportChanging(value);
					this.SendPropertyChanging();
					this._from_airport = value;
					this.SendPropertyChanged("from_airport");
					this.Onfrom_airportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_time", DbType="Time NOT NULL")]
		public System.TimeSpan departure_time
		{
			get
			{
				return this._departure_time;
			}
			set
			{
				if ((this._departure_time != value))
				{
					this.Ondeparture_timeChanging(value);
					this.SendPropertyChanging();
					this._departure_time = value;
					this.SendPropertyChanged("departure_time");
					this.Ondeparture_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="Date NOT NULL")]
		public System.DateTime departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival_time", DbType="Time NOT NULL")]
		public System.TimeSpan arrival_time
		{
			get
			{
				return this._arrival_time;
			}
			set
			{
				if ((this._arrival_time != value))
				{
					this.Onarrival_timeChanging(value);
					this.SendPropertyChanging();
					this._arrival_time = value;
					this.SendPropertyChanged("arrival_time");
					this.Onarrival_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival_date", DbType="Date NOT NULL")]
		public System.DateTime arrival_date
		{
			get
			{
				return this._arrival_date;
			}
			set
			{
				if ((this._arrival_date != value))
				{
					this.Onarrival_dateChanging(value);
					this.SendPropertyChanging();
					this._arrival_date = value;
					this.SendPropertyChanged("arrival_date");
					this.Onarrival_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aircraft_id", DbType="Int NOT NULL")]
		public int aircraft_id
		{
			get
			{
				return this._aircraft_id;
			}
			set
			{
				if ((this._aircraft_id != value))
				{
					if (this._Aircraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaircraft_idChanging(value);
					this.SendPropertyChanging();
					this._aircraft_id = value;
					this.SendPropertyChanged("aircraft_id");
					this.Onaircraft_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_economy_fare", DbType="Int NOT NULL")]
		public int economy_fare
		{
			get
			{
				return this._economy_fare;
			}
			set
			{
				if ((this._economy_fare != value))
				{
					this.Oneconomy_fareChanging(value);
					this.SendPropertyChanging();
					this._economy_fare = value;
					this.SendPropertyChanged("economy_fare");
					this.Oneconomy_fareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_class_fare", DbType="Int NOT NULL")]
		public int first_class_fare
		{
			get
			{
				return this._first_class_fare;
			}
			set
			{
				if ((this._first_class_fare != value))
				{
					this.Onfirst_class_fareChanging(value);
					this.SendPropertyChanging();
					this._first_class_fare = value;
					this.SendPropertyChanged("first_class_fare");
					this.Onfirst_class_fareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route_id", DbType="Int NOT NULL")]
		public int route_id
		{
			get
			{
				return this._route_id;
			}
			set
			{
				if ((this._route_id != value))
				{
					if (this._Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroute_idChanging(value);
					this.SendPropertyChanging();
					this._route_id = value;
					this.SendPropertyChanged("route_id");
					this.Onroute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Detail_Reserve_Ticket", Storage="_Reserve_Tickets", ThisKey="flight_id", OtherKey="filght_id")]
		public EntitySet<Reserve_Ticket> Reserve_Tickets
		{
			get
			{
				return this._Reserve_Tickets;
			}
			set
			{
				this._Reserve_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aircraft_Flight_Detail", Storage="_Aircraft", ThisKey="aircraft_id", OtherKey="aircraft_id", IsForeignKey=true)]
		public Aircraft Aircraft
		{
			get
			{
				return this._Aircraft.Entity;
			}
			set
			{
				Aircraft previousValue = this._Aircraft.Entity;
				if (((previousValue != value) 
							|| (this._Aircraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aircraft.Entity = null;
						previousValue.Flight_Details.Remove(this);
					}
					this._Aircraft.Entity = value;
					if ((value != null))
					{
						value.Flight_Details.Add(this);
						this._aircraft_id = value.aircraft_id;
					}
					else
					{
						this._aircraft_id = default(int);
					}
					this.SendPropertyChanged("Aircraft");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_Flight_Detail", Storage="_Route", ThisKey="route_id", OtherKey="route_id", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.Flight_Details.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.Flight_Details.Add(this);
						this._route_id = value.route_id;
					}
					else
					{
						this._route_id = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reserve_Tickets(Reserve_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Flight_Detail = this;
		}
		
		private void detach_Reserve_Tickets(Reserve_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Flight_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passenger")]
	public partial class Passenger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _passenger_id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _passport_no;
		
		private string _sex;
		
		private int _age;
		
		private string _password;
		
		private string _nationality;
		
		private string _telephone;
		
		private string _cell;
		
		private string _email;
		
		private string _address;
		
		private EntitySet<Reserve_Ticket> _Reserve_Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpassenger_idChanging(int value);
    partial void Onpassenger_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onpassport_noChanging(string value);
    partial void Onpassport_noChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnationalityChanging(string value);
    partial void OnnationalityChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OncellChanging(string value);
    partial void OncellChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Passenger()
		{
			this._Reserve_Tickets = new EntitySet<Reserve_Ticket>(new Action<Reserve_Ticket>(this.attach_Reserve_Tickets), new Action<Reserve_Ticket>(this.detach_Reserve_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passenger_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int passenger_id
		{
			get
			{
				return this._passenger_id;
			}
			set
			{
				if ((this._passenger_id != value))
				{
					this.Onpassenger_idChanging(value);
					this.SendPropertyChanging();
					this._passenger_id = value;
					this.SendPropertyChanged("passenger_id");
					this.Onpassenger_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passport_no", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string passport_no
		{
			get
			{
				return this._passport_no;
			}
			set
			{
				if ((this._passport_no != value))
				{
					this.Onpassport_noChanging(value);
					this.SendPropertyChanging();
					this._passport_no = value;
					this.SendPropertyChanged("passport_no");
					this.Onpassport_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int NOT NULL")]
		public int age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationality", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nationality
		{
			get
			{
				return this._nationality;
			}
			set
			{
				if ((this._nationality != value))
				{
					this.OnnationalityChanging(value);
					this.SendPropertyChanging();
					this._nationality = value;
					this.SendPropertyChanged("nationality");
					this.OnnationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(20)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cell", DbType="VarChar(20)")]
		public string cell
		{
			get
			{
				return this._cell;
			}
			set
			{
				if ((this._cell != value))
				{
					this.OncellChanging(value);
					this.SendPropertyChanging();
					this._cell = value;
					this.SendPropertyChanged("cell");
					this.OncellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Reserve_Ticket", Storage="_Reserve_Tickets", ThisKey="passenger_id", OtherKey="passenger_id")]
		public EntitySet<Reserve_Ticket> Reserve_Tickets
		{
			get
			{
				return this._Reserve_Tickets;
			}
			set
			{
				this._Reserve_Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reserve_Tickets(Reserve_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Passenger = this;
		}
		
		private void detach_Reserve_Tickets(Reserve_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Passenger = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reserve_Ticket")]
	public partial class Reserve_Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ticket_id;
		
		private System.DateTime _booking_date;
		
		private int _passenger_id;
		
		private int _filght_id;
		
		private string _ticket_type;
		
		private string _seat_no;
		
		private EntityRef<Flight_Detail> _Flight_Detail;
		
		private EntityRef<Passenger> _Passenger;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onticket_idChanging(int value);
    partial void Onticket_idChanged();
    partial void Onbooking_dateChanging(System.DateTime value);
    partial void Onbooking_dateChanged();
    partial void Onpassenger_idChanging(int value);
    partial void Onpassenger_idChanged();
    partial void Onfilght_idChanging(int value);
    partial void Onfilght_idChanged();
    partial void Onticket_typeChanging(string value);
    partial void Onticket_typeChanged();
    partial void Onseat_noChanging(string value);
    partial void Onseat_noChanged();
    #endregion
		
		public Reserve_Ticket()
		{
			this._Flight_Detail = default(EntityRef<Flight_Detail>);
			this._Passenger = default(EntityRef<Passenger>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ticket_id
		{
			get
			{
				return this._ticket_id;
			}
			set
			{
				if ((this._ticket_id != value))
				{
					this.Onticket_idChanging(value);
					this.SendPropertyChanging();
					this._ticket_id = value;
					this.SendPropertyChanged("ticket_id");
					this.Onticket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_date", DbType="Date NOT NULL")]
		public System.DateTime booking_date
		{
			get
			{
				return this._booking_date;
			}
			set
			{
				if ((this._booking_date != value))
				{
					this.Onbooking_dateChanging(value);
					this.SendPropertyChanging();
					this._booking_date = value;
					this.SendPropertyChanged("booking_date");
					this.Onbooking_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passenger_id", DbType="Int NOT NULL")]
		public int passenger_id
		{
			get
			{
				return this._passenger_id;
			}
			set
			{
				if ((this._passenger_id != value))
				{
					if (this._Passenger.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpassenger_idChanging(value);
					this.SendPropertyChanging();
					this._passenger_id = value;
					this.SendPropertyChanged("passenger_id");
					this.Onpassenger_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filght_id", DbType="Int NOT NULL")]
		public int filght_id
		{
			get
			{
				return this._filght_id;
			}
			set
			{
				if ((this._filght_id != value))
				{
					if (this._Flight_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilght_idChanging(value);
					this.SendPropertyChanging();
					this._filght_id = value;
					this.SendPropertyChanged("filght_id");
					this.Onfilght_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ticket_type
		{
			get
			{
				return this._ticket_type;
			}
			set
			{
				if ((this._ticket_type != value))
				{
					this.Onticket_typeChanging(value);
					this.SendPropertyChanging();
					this._ticket_type = value;
					this.SendPropertyChanged("ticket_type");
					this.Onticket_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seat_no", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string seat_no
		{
			get
			{
				return this._seat_no;
			}
			set
			{
				if ((this._seat_no != value))
				{
					this.Onseat_noChanging(value);
					this.SendPropertyChanging();
					this._seat_no = value;
					this.SendPropertyChanged("seat_no");
					this.Onseat_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Detail_Reserve_Ticket", Storage="_Flight_Detail", ThisKey="filght_id", OtherKey="flight_id", IsForeignKey=true)]
		public Flight_Detail Flight_Detail
		{
			get
			{
				return this._Flight_Detail.Entity;
			}
			set
			{
				Flight_Detail previousValue = this._Flight_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Flight_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight_Detail.Entity = null;
						previousValue.Reserve_Tickets.Remove(this);
					}
					this._Flight_Detail.Entity = value;
					if ((value != null))
					{
						value.Reserve_Tickets.Add(this);
						this._filght_id = value.flight_id;
					}
					else
					{
						this._filght_id = default(int);
					}
					this.SendPropertyChanged("Flight_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Reserve_Ticket", Storage="_Passenger", ThisKey="passenger_id", OtherKey="passenger_id", IsForeignKey=true)]
		public Passenger Passenger
		{
			get
			{
				return this._Passenger.Entity;
			}
			set
			{
				Passenger previousValue = this._Passenger.Entity;
				if (((previousValue != value) 
							|| (this._Passenger.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passenger.Entity = null;
						previousValue.Reserve_Tickets.Remove(this);
					}
					this._Passenger.Entity = value;
					if ((value != null))
					{
						value.Reserve_Tickets.Add(this);
						this._passenger_id = value.passenger_id;
					}
					else
					{
						this._passenger_id = default(int);
					}
					this.SendPropertyChanged("Passenger");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Route")]
	public partial class Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _route_id;
		
		private string _to_airport;
		
		private string _from_airport;
		
		private EntitySet<Flight_Detail> _Flight_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onroute_idChanging(int value);
    partial void Onroute_idChanged();
    partial void Onto_airportChanging(string value);
    partial void Onto_airportChanged();
    partial void Onfrom_airportChanging(string value);
    partial void Onfrom_airportChanged();
    #endregion
		
		public Route()
		{
			this._Flight_Details = new EntitySet<Flight_Detail>(new Action<Flight_Detail>(this.attach_Flight_Details), new Action<Flight_Detail>(this.detach_Flight_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int route_id
		{
			get
			{
				return this._route_id;
			}
			set
			{
				if ((this._route_id != value))
				{
					this.Onroute_idChanging(value);
					this.SendPropertyChanging();
					this._route_id = value;
					this.SendPropertyChanged("route_id");
					this.Onroute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_airport", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string to_airport
		{
			get
			{
				return this._to_airport;
			}
			set
			{
				if ((this._to_airport != value))
				{
					this.Onto_airportChanging(value);
					this.SendPropertyChanging();
					this._to_airport = value;
					this.SendPropertyChanged("to_airport");
					this.Onto_airportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_airport", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string from_airport
		{
			get
			{
				return this._from_airport;
			}
			set
			{
				if ((this._from_airport != value))
				{
					this.Onfrom_airportChanging(value);
					this.SendPropertyChanging();
					this._from_airport = value;
					this.SendPropertyChanged("from_airport");
					this.Onfrom_airportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_Flight_Detail", Storage="_Flight_Details", ThisKey="route_id", OtherKey="route_id")]
		public EntitySet<Flight_Detail> Flight_Details
		{
			get
			{
				return this._Flight_Details;
			}
			set
			{
				this._Flight_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
}
#pragma warning restore 1591
